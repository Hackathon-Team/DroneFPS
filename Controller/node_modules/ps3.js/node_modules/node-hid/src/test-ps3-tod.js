var HID = require('../');
var REPL = require('repl');

var repl = REPL.start('node-hid> ');
var hid = new HID.HID(1356, 616);

console.log('features', hid.getFeatureReport(0xf2, 17));
/*
function emit(hidDevice, data) {
    hidDevice.write([
        0x05,
        0xff,
        0x04,
        0x00,
        data.rumbleRight || 0,
        data.rumbleLeft  || 0,
        data.r           || 0,
        data.g           || 0,
        data.b           || 0,
        data.flashOn     || 0,
        data.flashOff    || 0
    ]);
};

// from https://github.com/ros-drivers/joystick_drivers/blob/indigo-devel/ps3joy/scripts/ps3joy_node.py
*/

function emit3(hidDevice, data) {
    /*
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x02, 0xff, 0x27, 0x10, 0x00, 0x32, 0xff, 
        0x27, 0x10, 0x00, 0x32, 0xff, 0x27, 0x10, 0x00, 
        0x32, 0xff, 0x27, 0x10, 0x00, 0x32, 0x00, 0x00, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    */
    hidDevice.write([
        0x01,
        0x00, 0xfe, 0x00, 0xfe, 0xff, 0x00, 0x00, 0x00,
        0x00, 0x02, 0xff, 0x27, 0x10, 0x00, 0x32, 0xff, 
        0x27, 0x10, 0x00, 0x32, 0xff, 0x27, 0x10, 0x00, 
        0x32, 0xff, 0x27, 0x10, 0x00, 0x32, 0x00, 0x00, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ]);
};

emit3( hid, {rumbleRight:1, rumbleLeft: 0} );

hid.gotData = function (err, data) {
    console.log('got ps3 data', data);
    this.read(this.gotData.bind(this));
}

hid.read(hid.gotData.bind(hid));

repl.context.hid = hid;
